/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.ControllerClientes;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.ModelClientes;

/**
 *
 * @author luan0
 */
public class ViewCliente extends javax.swing.JFrame {
    
    ControllerClientes controllerCliente = new ControllerClientes();
    ModelClientes modelClientes = new ModelClientes();
    ArrayList<ModelClientes> listaModelClientes = new ArrayList<>();
    String salvarAlterar;
    
    /**
     * Creates new form ViewCliente
     */
    public ViewCliente() {
        initComponents();
        carregarCliente();
        setLocationRelativeTo(null);
        habilitarDesabilitarCampos(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Clientes = new javax.swing.JPanel();
        Codigo = new javax.swing.JLabel();
        CodigoTxt = new javax.swing.JTextField();
        Nome = new javax.swing.JLabel();
        NomeTxt = new javax.swing.JTextField();
        Endereco = new javax.swing.JLabel();
        EnderecoTxt = new javax.swing.JTextField();
        Bairro = new javax.swing.JLabel();
        BairroTxt = new javax.swing.JTextField();
        Cidade = new javax.swing.JLabel();
        CidadeTxt = new javax.swing.JTextField();
        UFBox = new javax.swing.JComboBox<>();
        CEPTxt = new javax.swing.JTextField();
        UF = new javax.swing.JLabel();
        CEP = new javax.swing.JLabel();
        TelefoneTxt = new javax.swing.JTextField();
        Telefone = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelaCliente = new javax.swing.JTable();
        Cancelar = new javax.swing.JButton();
        Novo = new javax.swing.JButton();
        Salvar = new javax.swing.JButton();
        Alterar = new javax.swing.JButton();
        ExcluirBt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Clientes");

        Codigo.setText("Código:");

        CodigoTxt.setEditable(false);
        CodigoTxt.setEnabled(false);

        Nome.setText("Nome:");

        NomeTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NomeTxtActionPerformed(evt);
            }
        });

        Endereco.setText("Endereço:");

        Bairro.setText("Bairro:");

        Cidade.setText("Cidade:");

        CidadeTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CidadeTxtActionPerformed(evt);
            }
        });

        UFBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO" }));
        UFBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UFBoxActionPerformed(evt);
            }
        });

        UF.setText("UF:");

        CEP.setText("CEP:");

        Telefone.setText("Telefone:");

        TabelaCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome do Cliente", "Cidade", "Telefone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TabelaCliente);
        if (TabelaCliente.getColumnModel().getColumnCount() > 0) {
            TabelaCliente.getColumnModel().getColumn(0).setMinWidth(50);
            TabelaCliente.getColumnModel().getColumn(0).setPreferredWidth(50);
            TabelaCliente.getColumnModel().getColumn(1).setMinWidth(300);
            TabelaCliente.getColumnModel().getColumn(1).setPreferredWidth(300);
        }

        javax.swing.GroupLayout ClientesLayout = new javax.swing.GroupLayout(Clientes);
        Clientes.setLayout(ClientesLayout);
        ClientesLayout.setHorizontalGroup(
            ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ClientesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(ClientesLayout.createSequentialGroup()
                        .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Endereco)
                            .addComponent(EnderecoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Bairro)
                            .addComponent(BairroTxt)))
                    .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ClientesLayout.createSequentialGroup()
                            .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(Codigo)
                                .addComponent(CodigoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(ClientesLayout.createSequentialGroup()
                                    .addComponent(Nome)
                                    .addGap(399, 399, 399))
                                .addComponent(NomeTxt)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ClientesLayout.createSequentialGroup()
                            .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(ClientesLayout.createSequentialGroup()
                                    .addComponent(CidadeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(UFBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(ClientesLayout.createSequentialGroup()
                                    .addComponent(Cidade)
                                    .addGap(137, 137, 137)
                                    .addComponent(UF)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(CEPTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(CEP))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(ClientesLayout.createSequentialGroup()
                                    .addComponent(Telefone)
                                    .addGap(0, 0, Short.MAX_VALUE))
                                .addComponent(TelefoneTxt)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ClientesLayout.setVerticalGroup(
            ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ClientesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Codigo)
                    .addComponent(Nome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CodigoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NomeTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Endereco)
                    .addComponent(Bairro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EnderecoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BairroTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Cidade)
                    .addComponent(UF)
                    .addComponent(CEP)
                    .addComponent(Telefone))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CidadeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UFBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CEPTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TelefoneTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Cancelar.setText("Cancelar");
        Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarActionPerformed(evt);
            }
        });

        Novo.setText("Novo");
        Novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NovoActionPerformed(evt);
            }
        });

        Salvar.setText("Salvar");
        Salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalvarActionPerformed(evt);
            }
        });

        Alterar.setText("Alterar");
        Alterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AlterarActionPerformed(evt);
            }
        });

        ExcluirBt.setText("Excluir");
        ExcluirBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExcluirBtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Clientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(Cancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ExcluirBt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Novo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                        .addComponent(Alterar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Salvar)
                        .addGap(18, 18, 18))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Clientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Cancelar)
                    .addComponent(Novo)
                    .addComponent(Salvar)
                    .addComponent(Alterar)
                    .addComponent(ExcluirBt))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NomeTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NomeTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NomeTxtActionPerformed

    private void CidadeTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CidadeTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CidadeTxtActionPerformed

    private void UFBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UFBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UFBoxActionPerformed

    private void SalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalvarActionPerformed
        // TODO add your handling code here:
        
      if(salvarAlterar.equals("salvar")){
      salvarCliente();
      }else if(salvarAlterar.equals("alterar")){
        alterarCliente();
      }  
    }//GEN-LAST:event_SalvarActionPerformed

     private void limparCampo(){
        NomeTxt.setText("");
        EnderecoTxt.setText("");
        BairroTxt.setText("");
        CidadeTxt.setText("");
        CEPTxt.setText("");
        TelefoneTxt.setText("");
    }
    
 
    
    private void ExcluirBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExcluirBtActionPerformed
        // TODO add your handling code here:
        int linha = TabelaCliente.getSelectedRow();
        int codigoCliente = (int) TabelaCliente.getValueAt(linha, 0);
        
        if(controllerCliente.excluirClienteController(codigoCliente)){
            JOptionPane.showMessageDialog(this, "Cliente excluido com sucesso!","ATENÇÃO", JOptionPane.WARNING_MESSAGE);
            carregarCliente();
            habilitarDesabilitarCampos(false);
        }else{
            JOptionPane.showMessageDialog(this, "Erro ao excluir cliente!", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ExcluirBtActionPerformed

    private void CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarActionPerformed
        // TODO add your handling code here:
        habilitarDesabilitarCampos(false);
        limparCampo();
    }//GEN-LAST:event_CancelarActionPerformed

    private void NovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NovoActionPerformed
        // TODO add your handling code here:
        habilitarDesabilitarCampos(true);
        salvarAlterar = "salvar";
    }//GEN-LAST:event_NovoActionPerformed

    private void AlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AlterarActionPerformed
        // TODO add your handling code here:
        salvarAlterar = "alterar";
        int linha = this.TabelaCliente.getSelectedRow();
        try{
            int codigoCliente = (int) this.TabelaCliente.getValueAt(linha, 0);
            habilitarDesabilitarCampos(true);
            modelClientes = controllerCliente.retornarClienteController(codigoCliente);
            CodigoTxt.setText(String.valueOf(modelClientes.getIdCliente()));
            NomeTxt.setText(modelClientes.getCliNome());
            EnderecoTxt.setText(modelClientes.getCliEndereco());
            BairroTxt.setText(modelClientes.getCliBairro());
            CidadeTxt.setText(modelClientes.getCliCidade());
            UFBox.setSelectedItem(modelClientes.getCliEstado());
            CEPTxt.setText(modelClientes.getCliCep());
            TelefoneTxt.setText(modelClientes.getCliTelefone());
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Código inválido ou nenhum registro selecionado!","ATENÇÃO", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_AlterarActionPerformed

    private void carregarCliente(){
        listaModelClientes = controllerCliente.retornarListaClienteController();
        DefaultTableModel modelo = (DefaultTableModel) TabelaCliente.getModel();
        modelo.setNumRows(0);
        //inserir produtos na tabela
        int cont = listaModelClientes.size();
        for(int i = 0; i < cont; i++){
            modelo.addRow(new Object[]{
                listaModelClientes.get(i).getIdCliente(),
                listaModelClientes.get(i).getCliNome(),
                listaModelClientes.get(i).getCliCidade(),
                listaModelClientes.get(i).getCliTelefone()
                });
        }
    }
    
     private void habilitarDesabilitarCampos(boolean condicao){
        NomeTxt.setEnabled(condicao);
        EnderecoTxt.setEnabled(condicao);
        BairroTxt.setEnabled(condicao);
        CidadeTxt.setEnabled(condicao);
        UFBox.setEnabled(condicao);
        CEPTxt.setEnabled(condicao);
        TelefoneTxt.setEnabled(condicao);
        Salvar.setEnabled(condicao);
        
    }
     
        private void salvarCliente(){
        modelClientes.setCliNome(this.NomeTxt.getText());
        modelClientes.setCliEndereco(this.EnderecoTxt.getText());
        modelClientes.setCliBairro(this.BairroTxt.getText());
        modelClientes.setCliCidade(this.CidadeTxt.getText());
        modelClientes.setCliEstado(this.UFBox.getSelectedItem().toString());
        modelClientes.setCliCep(this.CEPTxt.getText());
        modelClientes.setCliTelefone(this.TelefoneTxt.getText());
        
        if(controllerCliente.salvarClienteController(modelClientes)>0){
            JOptionPane.showMessageDialog(this, "Cliente cadastrado com sucesso!","SUCESSO", JOptionPane.WARNING_MESSAGE);
            //carregar cliente na tabela
            this.carregarCliente();
            this.limparCampo();
            this.habilitarDesabilitarCampos(false);
            
        }else{
            JOptionPane.showMessageDialog(this, "Erro ao cadastrar cliente!", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
        
    }
    
    
    
     private void alterarCliente(){
        modelClientes.setIdCliente(Integer.parseInt(this.CodigoTxt.getText()));
        modelClientes.setCliNome(this.NomeTxt.getText());
        modelClientes.setCliEndereco(this.EnderecoTxt.getText());
        modelClientes.setCliBairro(this.BairroTxt.getText()); 
        modelClientes.setCliCidade(this.CidadeTxt.getText());
        modelClientes.setCliEstado(this.UFBox.getSelectedItem().toString());
        modelClientes.setCliCep(this.CEPTxt.getText());
        modelClientes.setCliTelefone(this.TelefoneTxt.getText());
        if(controllerCliente.alterarClienteController(modelClientes)){
            JOptionPane.showMessageDialog(this, "Cliente alterado com sucesso!","ATENÇÃO", JOptionPane.WARNING_MESSAGE);
            carregarCliente();
            limparCampo();
            habilitarDesabilitarCampos(false);
        }else{
            JOptionPane.showMessageDialog(this, "Erro ao alterar cliente!", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Alterar;
    private javax.swing.JLabel Bairro;
    private javax.swing.JTextField BairroTxt;
    private javax.swing.JLabel CEP;
    private javax.swing.JTextField CEPTxt;
    private javax.swing.JButton Cancelar;
    private javax.swing.JLabel Cidade;
    private javax.swing.JTextField CidadeTxt;
    private javax.swing.JPanel Clientes;
    private javax.swing.JLabel Codigo;
    private javax.swing.JTextField CodigoTxt;
    private javax.swing.JLabel Endereco;
    private javax.swing.JTextField EnderecoTxt;
    private javax.swing.JButton ExcluirBt;
    private javax.swing.JLabel Nome;
    private javax.swing.JTextField NomeTxt;
    private javax.swing.JButton Novo;
    private javax.swing.JButton Salvar;
    private javax.swing.JTable TabelaCliente;
    private javax.swing.JLabel Telefone;
    private javax.swing.JTextField TelefoneTxt;
    private javax.swing.JLabel UF;
    private javax.swing.JComboBox<String> UFBox;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
